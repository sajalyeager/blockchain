{"ast":null,"code":"var _jsxFileName = \"/home/sajal/Desktop/election/client/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport electionabi from './contracts/election.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  loadWeb3();\n  loadBlockchaindata();\n}, []);\n\nconst loadWeb3 = async () => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    await window.ethereum.enable();\n    console.log(\"successfully into first case\");\n  } else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider);\n    console.log(\"successfully into second case\");\n  } else {\n    window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n  }\n};\n\nconst loadBlockchaindata = async () => {\n  const web3 = window.web3;\n  const accounts = web3.eth.getAccounts();\n  const account = accounts[0];\n  const networkId = await web3.eth.getId();\n  const networkData = electionabi.networks[networkId];\n\n  if (networkData) {\n    const election = new web3.eth.Contract(electionabi.abi, networkData.address);\n    console.log(election);\n  } else {\n    window.alert(\"contract is not present here\");\n  }\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-dark bg-dark shadow mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navbar-brand my-auto\",\n        children: \"Election Dapp \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item text-white\",\n          children: \"account address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sajal/Desktop/election/client/src/App.js"],"names":["React","useEffect","useState","electionabi","loadWeb3","loadBlockchaindata","window","ethereum","web3","Web3","enable","console","log","currentProvider","alert","accounts","eth","getAccounts","account","networkId","getId","networkData","networks","election","Contract","abi","address","App"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;;AAEA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAyB,2BAAzB;;AACAF,SAAS,CAAC,MAAK;AACbG,EAAAA,QAAQ;AACRC,EAAAA,kBAAkB;AACnB,CAHQ,EAGP,EAHO,CAAT;;AAKA,MAAMD,QAAQ,GAAG,YAAY;AAC3B,MAAIE,MAAM,CAACC,QAAX,EAAqB;AACnBD,IAAAA,MAAM,CAACE,IAAP,GAAc,IAAIC,IAAJ,CAASH,MAAM,CAACC,QAAhB,CAAd;AACA,UAAMD,MAAM,CAACC,QAAP,CAAgBG,MAAhB,EAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,GAJD,MAKK,IAAIN,MAAM,CAACE,IAAX,EAAiB;AACpBF,IAAAA,MAAM,CAACE,IAAP,GAAc,IAAIC,IAAJ,CAASH,MAAM,CAACE,IAAP,CAAYK,eAArB,CAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,GAHI,MAIA;AACHN,IAAAA,MAAM,CAACQ,KAAP,CAAa,qEAAb;AACD;AACF,CAbD;;AAcA,MAAMT,kBAAkB,GAAG,YAAU;AACnC,QAAMG,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,QAAMO,QAAQ,GAACP,IAAI,CAACQ,GAAL,CAASC,WAAT,EAAf;AACA,QAAMC,OAAO,GAAEH,QAAQ,CAAC,CAAD,CAAvB;AACA,QAAMI,SAAS,GAAE,MAAMX,IAAI,CAACQ,GAAL,CAASI,KAAT,EAAvB;AACA,QAAMC,WAAW,GAAElB,WAAW,CAACmB,QAAZ,CAAqBH,SAArB,CAAnB;;AACA,MAAGE,WAAH,EACA;AACE,UAAME,QAAQ,GAAC,IAAIf,IAAI,CAACQ,GAAL,CAASQ,QAAb,CAAsBrB,WAAW,CAACsB,GAAlC,EAAsCJ,WAAW,CAACK,OAAlD,CAAf;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AACD,GAJD,MAKI;AACFjB,IAAAA,MAAM,CAACQ,KAAP,CAAa,8BAAb;AACD;AAEF,CAfD;;AAkBA,SAASa,GAAT,GAAe;AACb,sBACE;AAAA,2BACC;AAAM,MAAA,SAAS,EAAC,wCAAhB;AAAA,8BACC;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,+BACC;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAXQA,G;AAaT,eAAeA,GAAf","sourcesContent":["import React ,{useEffect,useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport electionabi  from './contracts/election.json';\nuseEffect(()=> {\n  loadWeb3();\n  loadBlockchaindata();\n},[]);\n\nconst loadWeb3 = async () => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum)\n    await window.ethereum.enable()\n    console.log(\"successfully into first case\");\n  }\n  else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider)\n    console.log(\"successfully into second case\")\n  }\n  else {\n    window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n  }\n}\nconst loadBlockchaindata = async ()=>{\n  const web3 = window.web3;\n  const accounts=web3.eth.getAccounts();\n  const account= accounts[0];\n  const networkId= await web3.eth.getId();\n  const networkData= electionabi.networks[networkId];\n  if(networkData)\n  {\n    const election=new web3.eth.Contract(electionabi.abi,networkData.address);\n    console.log(election);\n  }\n  else{\n    window.alert(\"contract is not present here\");\n  }\n\n}\n\n\nfunction App() {\n  return (\n    <div >\n     < nav className=\"navbar navbar-dark bg-dark shadow mb-5\">\n      <p className=\"navbar-brand my-auto\">Election Dapp </p>  \n      <ul className=\"navbar-nav\">\n       <li className=\"nav-item text-white\">account address </li>\n      </ul>\n      </nav> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}