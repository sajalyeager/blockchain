{"ast":null,"code":"var _jsxFileName = \"/home/sajal/Desktop/election/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport electionabi from './contracts/election.json';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchaindata();\n  }, []);\n  const [curraccount, setcurraccount] = useState();\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"not present\");\n    }\n  };\n\n  const loadBlockchaindata = async () => {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    setcurraccount(account);\n    const networkId = await web3.eth.net.getId();\n    const networkData = electionabi.networks[networkId];\n\n    if (networkData) {\n      const election = new web3.eth.Contract(electionabi.abi, networkData.address);\n      console.log(election);\n    } else {\n      window.alert(\"contract is not present here\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-dark bg-dark shadow mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navbar-brand my-auto\",\n        children: \"Election Dapp \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item text-white\",\n          children: \"account address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+1itxrLB1OaLoMPGT4YkI1A12GM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sajal/Desktop/election/client/src/App.js"],"names":["React","useEffect","useState","electionabi","Web3","App","loadWeb3","loadBlockchaindata","curraccount","setcurraccount","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","account","networkId","net","getId","networkData","networks","election","Contract","abi","address","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;;AAEA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEbJ,EAAAA,SAAS,CAAC,MAAK;AACbK,IAAAA,QAAQ;AACRC,IAAAA,kBAAkB;AACnB,GAHQ,EAGP,EAHO,CAAT;AAIF,QAAK,CAACC,WAAD,EAAaC,cAAb,IAA6BP,QAAQ,EAA1C;;AACE,QAAMI,QAAQ,GAAG,YAAU;AACzB,QAAGI,MAAM,CAACC,QAAV,EAAmB;AACjBD,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAIR,IAAJ,CAASM,MAAM,CAACC,QAAhB,CAAd;AACA,YAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;AACD,KAHD,MAIG,IAAGH,MAAM,CAACE,IAAV,EACF;AACEF,MAAAA,MAAM,CAACE,IAAP,GAAY,IAAIR,IAAJ,CAASM,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAZ;AAED,KAJC,MAMF;AACEJ,MAAAA,MAAM,CAACK,KAAP,CAAa,aAAb;AACD;AAEH,GAfD;;AAgBA,QAAMR,kBAAkB,GAAG,YAAU;AACnC,UAAMK,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,UAAMI,QAAQ,GAAC,MAAMJ,IAAI,CAACK,GAAL,CAASC,WAAT,EAArB;AACA,UAAMC,OAAO,GAAEH,QAAQ,CAAC,CAAD,CAAvB;AACAP,IAAAA,cAAc,CAACU,OAAD,CAAd;AACA,UAAMC,SAAS,GAAE,MAAMR,IAAI,CAACK,GAAL,CAASI,GAAT,CAAaC,KAAb,EAAvB;AACA,UAAMC,WAAW,GAAEpB,WAAW,CAACqB,QAAZ,CAAqBJ,SAArB,CAAnB;;AACA,QAAGG,WAAH,EACA;AACE,YAAME,QAAQ,GAAC,IAAIb,IAAI,CAACK,GAAL,CAASS,QAAb,CAAsBvB,WAAW,CAACwB,GAAlC,EAAsCJ,WAAW,CAACK,OAAlD,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,KAJD,MAKI;AACFf,MAAAA,MAAM,CAACK,KAAP,CAAa,8BAAb;AACD;AAEF,GAhBD;;AAmBA,sBACE;AAAA,2BACC;AAAM,MAAA,SAAS,EAAC,wCAAhB;AAAA,8BACC;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,+BACC;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GApDQV,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React ,{useEffect,useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport electionabi  from './contracts/election.json';\nimport Web3 from 'web3'\n\n\nfunction App() {\n\n  useEffect(()=> {\n    loadWeb3();\n    loadBlockchaindata();\n  },[]);\nconst[curraccount,setcurraccount]=useState();\n  const loadWeb3 = async ()=>{\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n  else if(window.web3)\n     {\n       window.web3=new Web3(window.web3.currentProvider);\n       \n     }\n    else\n     {\n       window.alert(\"not present\");\n     }\n\n  }\n  const loadBlockchaindata = async ()=>{\n    const web3 = window.web3;\n    const accounts=await web3.eth.getAccounts();\n    const account= accounts[0];\n    setcurraccount(account);\n    const networkId= await web3.eth.net.getId();\n    const networkData= electionabi.networks[networkId];\n    if(networkData)\n    {\n      const election=new web3.eth.Contract(electionabi.abi,networkData.address);\n      console.log(election);\n    }\n    else{\n      window.alert(\"contract is not present here\");\n    }\n  \n  }\n\n\n  return (\n    <div >\n     < nav className=\"navbar navbar-dark bg-dark shadow mb-5\">\n      <p className=\"navbar-brand my-auto\">Election Dapp </p>  \n      <ul className=\"navbar-nav\">\n       <li className=\"nav-item text-white\">account address </li>\n      </ul>\n      </nav> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}